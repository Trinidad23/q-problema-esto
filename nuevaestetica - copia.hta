<!DOCTYPE html>
<html>
<head>
  <meta http-equiv="x-ua-compatible" content="IE=Edge" />
  <meta charset="utf-8">
  <title>Gestor de Casos</title>
  <HTA:APPLICATION
    ID="GestorCasos"
    APPLICATIONNAME="Gestor de Casos"
    BORDER="dialog"
    CAPTION="yes"
    SHOWINTASKBAR="yes"
    SINGLEINSTANCE="yes"
    SYSMENU="yes"
    MAXIMIZEBUTTON="no"
    MINIMIZEBUTTON="yes"
    SCROLL="yes"
    WINDOWSTATE="maximize"
  />
  <style>
    html, body {
      width: 100vw; height: 100vh; margin: 0; padding: 0;
      font-family: 'Segoe UI', Arial, sans-serif;
      background: #f5f7fa;
      color: #222;
      overflow: hidden;
    }
    .app-container {
      display: flex;
      min-height: 100vh;
      background: #f5f7fa;
    }
    .sidebar {
      width: 240px;
      background: #17406a;
      display: flex; flex-direction: column; align-items: stretch;
      padding: 0;
      border-right: 2px solid #d0d4da;
      min-height: 100vh;
      box-shadow: 2px 0 12px #17406a10;
      z-index: 10;
    }
    .sidebar .title {
      color: #fff;
      font-size: 1.35em;
      font-weight: 700;
      padding: 36px 16px 20px 16px;
      border-bottom: 1px solid #285080;
      background: #17406a;
      letter-spacing: 1px;
      text-align: center;
      margin-bottom: 10px;
      user-select: none;
    }
    .sidebar button {
      background: none;
      border: none;
      color: #e5eaf1;
      font-size: 1.03em;
      padding: 14px 22px;
      text-align: left;
      cursor: pointer;
      transition: background 0.16s, color 0.14s;
      border-bottom: 1px solid #204d7c;
      outline: none;
      font-weight: 500;
      letter-spacing: 0.1px;
      border-radius: 0 12px 12px 0;
      margin-right: 6px;
      position: relative;
      display: flex;
      align-items: center;
      gap: 8px;
    }
    .sidebar button:hover, .sidebar button.active {
      background: #205085;
      color: #fff;
    }
    .sidebar .spacer {
      flex: 1;
    }
    .user-bar-container {
      width: 100%;
      background: #eaf0f7;
      border-bottom: 1px solid #d0d4da;
      display: flex;
      align-items: center;
      padding: 0 18px 0 0;
      height: 54px;
      min-height: 54px;
      box-shadow: 0 1.5px 0 #e7ecfa;
      position: relative;
      z-index: 20;
    }
    .user-bar {
      display: flex;
      align-items: center;
      gap: 12px;
      margin-left: auto;
      font-size: 1.01em;
      min-width: 0;
    }
    .user-avatar {
      width: 36px; height: 36px; border-radius: 50%;
      background: #17406a;
      display: flex; align-items: center; justify-content: center;
      color: #fff; font-weight: 700; font-size: 1.12em; letter-spacing: 1px;
      border: 2px solid #d0d4da; box-shadow: 0 2px 7px #b3c9e920; margin-right: 2px;
      user-select: none;
    }
    .user-info { display: flex; flex-direction: column; justify-content: center; min-width: 0; }
    .user-info .user-name {
      color: #17406a; font-weight: 600; font-size: 1em; letter-spacing: 0.4px;
      white-space: nowrap; overflow: hidden; text-overflow: ellipsis;
    }
    .user-info .user-role {
      color: #285080; font-size: 0.93em; font-weight: 500; letter-spacing: 0.1px;
      margin-top: 1.5px; opacity: 0.88; white-space: nowrap; overflow: hidden; text-overflow: ellipsis;
    }
    .user-bar .logout-btn {
      margin-left: 14px;
      background: #17406a;
      border: none;
      color: #fff;
      font-weight: 600;
      font-size: 1em;
      cursor: pointer;
      border-radius: 6px;
      padding: 6px 18px;
      transition: background 0.14s, color 0.15s, box-shadow 0.16s;
      box-shadow: none;
    }
    .user-bar .logout-btn:hover {
      background: #b00020;
      color: #fff;
    }
.form-block button.boton {
  margin-top: 14px;
}
    .datetime-bar {
      display: flex; justify-content: flex-end; align-items: center;
      font-size: 1em; color: #205085; font-weight: 600;
      padding: 7px 18px 7px 0;
      border-radius: 0 0 0 0;
      border-bottom: 1px solid #d0d4da;
      min-height: 26px;
      margin-bottom: 5px;
      margin-top: 8px;
      letter-spacing: 0.3px;
      background: #f5f7fa;
      user-select: none;
    }
    .content {
      flex: 1;
      display: flex;
      flex-direction: column;
      justify-content: flex-start;
      min-height: 0;
      max-height: 100vh;
      overflow: auto;
      padding: 0 0 0 0;
      background: #fff;
    }
    .form-block {
      background: #fff;
      border-radius: 8px;
      box-shadow: 0 2px 9px #17406a13;
      max-width: 540px;
      margin: 28px auto 0 auto;
      padding: 26px 24px 24px 24px;
      display: flex;
      flex-direction: column;
      gap: 19px;
      border: 1px solid #d0d4da;
    }
    .form-title {
      color: #17406a;
      font-size: 1.14em;
      font-weight: 700;
      margin-bottom: 7px;
      letter-spacing: 0.5px;
      text-align: center;
      text-transform: uppercase;
    }
    .menu-crear-opciones, .menu-buscar-opciones {
      display: flex;
      gap: 10px;
      justify-content: center;
      margin-bottom: 15px;
      margin-top: 7px;
    }
    .boton-opcion {
      background: #eaf0f7;
      color: #17406a;
      font-weight: 600;
      border: 1px solid #17406a;
      border-radius: 7px;
      font-size: 1.06em;
      padding: 8px 24px;
      cursor: pointer;
      transition: background 0.13s, color 0.13s, border 0.11s;
      outline: none;
      box-shadow: none;
      text-transform: capitalize;
      letter-spacing: 0.1px;
    }
    .boton-opcion.selected, .boton-opcion:active {
      background: #17406a;
      color: #fff;
      border: 1px solid #285080;
    }
    .form-row {
      display: flex;
      gap: 12px;
      flex-wrap: wrap;
      margin-bottom: 8px;
    }
    .field-block {
      flex: 1;
      min-width: 140px;
      display: flex;
      flex-direction: column;
      gap: 4px;
    }
    .field-label {
      font-weight: 600;
      margin-bottom: 4px;
      color: #17406a;
      font-size: 1em;
      letter-spacing: .12px;
    }
    .form-block input, .form-block select {
      font-size: 1em;
      padding: 7px 10px;
      border-radius: 6px;
      border: 1px solid #b7ccee;
      box-sizing: border-box;
      margin-bottom: 2px;
      background: #f5f7fa;
      transition: border 0.12s;
      font-weight: 500;
      box-shadow: none;
    }
    .form-block input:focus, .form-block select:focus {
      border: 1.3px solid #17406a;
      outline: none;
      background: #fff;
    }
    .boton {
      background: #17406a;
      color: #fff;
      border: none;
      border-radius: 7px;
      padding: 10px 24px;
      font-size: 1em;
      cursor: pointer;
      transition: background 0.13s, box-shadow 0.09s, transform 0.07s;
      box-shadow: none;
      outline: none;
      display: inline-block;
      margin-top: 10px;
      font-weight: 600;
      letter-spacing: .1px;
    }
    .boton:hover {
      background: #205085;
      box-shadow: 0 1px 7px #17406a13;
      transform: translateY(-1px) scale(1.01);
    }
    .feedback-success {
      color: #119c41;
      background: #e2fbe6;
      padding: 9px 14px;
      border-radius: 6px;
      margin-top: 10px;
      border: 1px solid #b3e5c1;
      font-size: 1em;
      text-align: center;
      font-weight: 600;
      letter-spacing:.2px;
      box-shadow: none;
    }
    .feedback-error {
      color: #b00020;
      background: #ffe5e8;
      padding: 9px 14px;
      border-radius: 6px;
      margin-top: 10px;
      border: 1px solid #ffbac6;
      font-size: 1em;
      text-align: center;
      font-weight: 600;
      letter-spacing:.13px;
      box-shadow: none;
    }
    .form-tip {
      margin-top:14px;
      font-size:0.97em;
      color:#285080;
      background: #eaf0f7;
      border-radius: 7px;
      padding: 7px 13px;
      text-align: center;
      letter-spacing:.1px;
      border:1px solid #d0d4da;
      box-shadow: none;
    }
#seccion-crear-oficios .form-block {
  max-width: 500px;
  margin: 35px auto 0 auto;
  background: #fff;
  border-radius: 18px;
  box-shadow: 0 5px 24px #1a237e11;
  padding: 26px 30px 25px 30px;
}
#seccion-crear-oficios .form-title {
  font-size: 1.29em;
  font-weight: bold;
  color: #213c5a;
  margin-bottom: 17px;
  letter-spacing: .5px;
}
#lista-formatos a {
  display: block;
  color: #1e4a8b;
  font-size: 1.06em;
  margin: 4px 0;
  text-decoration: underline;
  cursor: pointer;
}
#lista-formatos .pagina {
  margin-top: 20px;
  text-align: center;
}
#lista-formatos .pagina button {
  margin: 0 3px;
  font-size: 1em;
  padding: 2px 9px;
  border-radius: 5px;
  border: 1px solid #bccce7;
  background: #f0f3fb;
  cursor: pointer;
}
#lista-formatos .pagina .active {
  background: #3765c0;
  color: #fff;
  font-weight: bold;
}

    h1, h2 {
      color: #17406a;
      margin-top: 0;
      font-weight: 700;
      letter-spacing: 0.04em;
      font-size: 1.15em;
    }
    /* Scrollbar */
    ::-webkit-scrollbar { width: 10px; background: #eaf0f7; border-radius: 7px; }
    ::-webkit-scrollbar-thumb { background: #b7ccee; border-radius: 7px; }
    ::-webkit-scrollbar-thumb:hover { background: #17406a; }
  </style>
</head>
<body>
<div class="app-container">
  <nav class="sidebar">
    <div class="title">Gestor de Casos</div>
    <button onclick="mostrarSeccion('inicio')" id="btn-inicio" class="active">Inicio</button>
    <button onclick="mostrarSeccion('crear-caso')" id="btn-crear-caso">Crear a√±o/caso/subcaso</button>
    <button id="btn-crear-oficios" class="sidebar-btn" onclick="mostrarSeccion('crear-oficios')">Crear oficios</button>
    <button onclick="mostrarSeccion('buscar-caso')" id="btn-buscar-caso">Buscar caso</button>
    <button onclick="mostrarSeccionBusquedaAvanzada()" id="btn-busqueda-avanzada">B√∫squeda avanzada</button>
    <div class="spacer"></div>
  </nav>
  <div style="flex:1;display:flex;flex-direction:column;min-width:0;">
    <div class="user-bar-container" id="user-bar-container">
      <div class="user-bar" id="user-bar">
        <div class="user-avatar" id="user-avatar">J</div>
        <div class="user-info">
          <span class="user-name" id="user-name">Jhonatan</span>
          <span class="user-role" id="user-role">Administrador</span>
        </div>
        <button class="logout-btn" onclick="cerrarSesion()" title="Cerrar sesi√≥n">Salir</button>
      </div>
    </div>
    <section class="content" id="seccion-contenido">
      <div class="datetime-bar" id="datetime-bar"></div>
      <div id="seccion-inicio" style="display:block;">
        <h1 id="bienvenida-usuario">Bienvenido al Gestor de Casos</h1>
        <p style="font-size:1.11em;color:#285080;">Utilice el men√∫ lateral para gestionar a√±os, casos y subcasos de manera sencilla y ordenada.</p>
        <div class="form-tip" style="max-width:400px;margin:30px auto 0 auto;">
          Esta plataforma institucional est√° dise√±ada para facilitar el trabajo y la organizaci√≥n documental en su entidad p√∫blica.
        </div>
      </div>
      <!-- SECCI√ìN CREAR A√ëO/CASO/SUBCASO -->
      <div id="seccion-crear-caso" style="display:none;">
        <div class="form-block">
          <div class="form-title">¬øQu√© desea crear?</div>
          <div class="menu-crear-opciones">
            <button class="boton-opcion" id="btn-opcion-anio" onclick="mostrarCrearPaso('anio')">A√±o</button>
            <button class="boton-opcion" id="btn-opcion-caso" onclick="mostrarCrearPaso('caso')">Caso</button>
            <button class="boton-opcion" id="btn-opcion-subcaso" onclick="mostrarCrearPaso('subcaso')">Subcaso</button>
          </div>
          <!-- Formulario A√±o -->
          <form id="form-crear-anio" style="display:none;" onsubmit="crearAnioGuiado();return false;">
            <div class="field-block">
              <label class="field-label" for="input-anio-guiado">A√±o</label>
              <input id="input-anio-guiado" type="text" placeholder="Ej: 2025" autocomplete="off" />
            </div>
            <button class="boton" type="submit">Crear a√±o</button>
          </form>
          <!-- Formulario Caso -->
          <form id="form-crear-caso" style="display:none;" onsubmit="crearCasoGuiado();return false;">
            <div class="field-block">
              <label class="field-label" for="select-anio-guiado">A√±o</label>
              <select id="select-anio-guiado"></select>
            </div>
            <div class="field-block">
              <label class="field-label" for="input-caso-guiado">Caso</label>
              <input id="input-caso-guiado" type="text" placeholder="Nombre del caso" autocomplete="off" />
            </div>
            <button class="boton" type="submit">Crear caso</button>
          </form>
          <!-- Formulario Subcaso -->
          <form id="form-crear-subcaso" style="display:none;" onsubmit="crearSubcasoGuiado();return false;">
            <div class="field-block">
              <label class="field-label" for="select-anio-guiado2">A√±o</label>
              <select id="select-anio-guiado2" onchange="llenarCasosParaSubcaso()"></select>
            </div>
            <div class="field-block">
              <label class="field-label" for="select-caso-guiado">Caso</label>
              <select id="select-caso-guiado"></select>
            </div>
            <div class="field-block">
              <label class="field-label" for="input-subcaso-guiado">Subcaso</label>
              <input id="input-subcaso-guiado" type="text" placeholder="Nombre del subcaso" autocomplete="off" />
            </div>
            <button class="boton" type="submit">Crear subcaso</button>
          </form>
          <div id="crear-feedback-guiado"></div>
          <div class="form-tip">
            Elija si desea crear un a√±o, caso o subcaso.<br>
            Solo se solicitar√° la informaci√≥n necesaria.
          </div>
        </div>
      </div>
<!-- NUEVA SECCI√ìN: B√öSQUEDA AVANZADA -->
<div id="seccion-busqueda-avanzada" style="display:none;">
  <div class="form-block">
    <div class="form-title">B√öSQUEDA AVANZADA</div>
    <div class="field-block" style="width:100%;margin-bottom:12px;">
      <label for="input-busqueda-avanzada" style="display:block;margin-bottom:7px;">Nombre a buscar:</label>
      <input id="input-busqueda-avanzada"
             type="text"
             placeholder="Ingrese nombre, palabra clave o fragmento..."
             style="width:100%;display:block;font-size:1em;padding:7px 10px;border-radius:6px;border:1px solid #bccce7;box-sizing:border-box;"
             onkeyup="if(event.key==='Enter'){buscarAvanzado();}">
    </div>
    <!-- Aqu√≠ el cambio principal -->
    <button class="boton" onclick="buscarAvanzado()" style="margin-top: 80px; width:100%;">Buscar en todos los a√±os</button>
    <div id="resultados-busqueda-avanzada" style="margin-top:18px;"></div>
    <div class="form-tip" style="margin-top:14px;">
      Ingrese una palabra o fragmento y se buscar√° en todos los a√±os, casos y subcasos.<br>
      Se mostrar√°n los resultados con acceso directo a la carpeta correspondiente.
    </div>
  </div>
</div>

<!--SECCI√ìN DE FORMATOS -->
<div id="seccion-crear-oficios" style="display:none;">
  <div class="form-block">
    <div class="form-title">Crear oficios</div>
    <div style="font-size:1.12em;font-weight:500;margin-bottom:10px;">
      Buscar formato <span style="color:#213c5a;font-weight:700;">(en carpeta <b>Formatos</b> del Escritorio)</span>
    </div>
    <!-- Filtro de formatos -->
    <input id="filtro-formatos" type="text" placeholder="Filtrar por nombre..."
           style="width:100%;font-size:1em;padding:9px 12px;margin-bottom:9px;border-radius:7px;border:1.5px solid #3772b3;box-sizing:border-box;"
           onkeyup="filtrarFormatos()">
    <div style="color:#b00020;margin-bottom:5px;font-weight:500;">
      <span id="cantidad-formatos">Formatos detectados: 0</span>
    </div>
    <!-- Lista paginada de formatos -->
    <div id="lista-formatos" style="background:#f8fafc;border-radius:10px;padding:19px 20px;min-height:90px;margin-bottom:15px;"></div>
    <!-- Selecci√≥n de destino adaptada -->
    <div style="margin-bottom:13px;font-weight:500;">Destino:</div>
    <div style="display:flex;gap:12px;flex-wrap:wrap;margin-bottom:12px;">
      <div style="flex:1;">
        <label style="font-size:.98em;font-weight:500;">Caso:</label><br>
        <select id="select-caso-oficio-principal" style="min-width:110px;padding:6px 7px;border-radius:6px;border:1px solid #bccce7;font-size:1em;" onchange="onSeleccionarCasoOficio()"></select>
      </div>
    </div>
    <div id="oficio-secundarios" style="display:none;">
      <div style="display:flex;gap:12px;flex-wrap:wrap;margin-bottom:12px;">
        <div>
          <label style="font-size:.98em;font-weight:500;">A√±o:</label><br>
          <input id="anio-oficio-secundario" type="text" readonly style="min-width:80px;padding:6px 7px;border-radius:6px;border:1px solid #bccce7;font-size:1em;background:#f5f7fa;">
        </div>
        <div>
          <label style="font-size:.98em;font-weight:500;">Subcaso (opcional):</label><br>
          <select id="select-subcaso-oficio-principal" style="min-width:130px;padding:6px 7px;border-radius:6px;border:1px solid #bccce7;font-size:1em;">
            <option value="">(Sin subcaso)</option>
          </select>
        </div>
      </div>
      <!-- Nuevo nombre -->
      <div style="margin-bottom:7px;font-weight:500;">Nuevo nombre (sin extensi√≥n):</div>
      <input id="nuevo-nombre-oficio" type="text" placeholder="Ejemplo: Petici√≥n Juan"
             style="width:100%;font-size:1em;padding:9px 12px;margin-bottom:18px;border-radius:7px;border:1.5px solid #3772b3;box-sizing:border-box;">
      <!-- Bot√≥n de acci√≥n -->
      <button class="boton" style="width:100%;font-size:1.12em;padding:13px 0;" onclick="copiarYCrearOficio()">Copiar y abrir formato</button>
    </div>
  </div>
</div>

<!-- SECCI√ìN BUSCAR CASO (fragmento modificado) -->
<div id="seccion-buscar-caso" style="display:none;">
  <div class="form-block">
    <div class="form-title">Buscar casos y subcasos</div>
    <div class="menu-buscar-opciones">
      <button class="boton-opcion selected" id="btn-buscar-anio" onclick="mostrarBuscarPaso('anio')">Por A√±o</button>
      <button class="boton-opcion" id="btn-buscar-caso2" onclick="mostrarBuscarPaso('caso')">Por Caso</button>
      <button class="boton-opcion" id="btn-buscar-subcaso2" onclick="mostrarBuscarPaso('subcaso')">Por Subcaso</button>
    </div>
    <!-- Buscar por A√±o -->
    <div id="form-buscar-anio" style="display:block;">
      <div class="field-block">
        <label class="field-label" for="buscar-anio-flex">A√±o:</label>
        <input id="buscar-anio-flex-input" readonly style="cursor:pointer;width:100%;box-sizing:border-box;" placeholder="Seleccione un a√±o" onclick="mostrarCalendarioBuscarAnio('buscar-anio-flex-input', buscarPorAnio)">
        <div id="popup-calendario-buscar-anio-flex-input" style="position:relative;display:none;z-index:1000;"></div>
      </div>
      <input id="filtro-buscar-caso-anio" type="text" placeholder="Filtrar por nombre..." style="width:100%;font-size:1em;padding:6px 10px;margin-bottom:8px;border-radius:6px;border:1px solid #bccce7;">
      <div id="lista-buscar-caso-anio" style="margin-top:8px"></div>
    </div>
    <!-- Buscar por Caso -->
    <div id="form-buscar-caso2" style="display:none;">
      <div class="field-block">
        <label class="field-label" for="buscar-anio-caso">A√±o:</label>
        <input id="buscar-anio-caso-input" readonly style="cursor:pointer;width:100%;box-sizing:border-box;" placeholder="Seleccione un a√±o" onclick="mostrarCalendarioBuscarAnio('buscar-anio-caso-input', llenarCasosBuscarCaso)">
        <div id="popup-calendario-buscar-anio-caso-input" style="position:relative;display:none;z-index:1000;"></div>
      </div>
      <div class="field-block">
        <label class="field-label" for="buscar-caso-caso">Caso:</label>
        <select id="buscar-caso-caso" onchange="buscarPorCaso()"></select>
      </div>
      <input id="filtro-buscar-caso-caso" type="text" placeholder="Filtrar por nombre..." style="width:100%;font-size:1em;padding:6px 10px;margin-bottom:8px;border-radius:6px;border:1px solid #bccce7;">
      <div id="lista-buscar-caso-caso" style="margin-top:8px"></div>
    </div>
    <!-- Buscar por Subcaso -->
    <div id="form-buscar-subcaso2" style="display:none;">
      <div class="field-block">
        <label class="field-label" for="buscar-anio-subcaso">A√±o:</label>
        <input id="buscar-anio-subcaso-input" readonly style="cursor:pointer;width:100%;box-sizing:border-box;" placeholder="Seleccione un a√±o" onclick="mostrarCalendarioBuscarAnio('buscar-anio-subcaso-input', llenarCasosBuscarSubcaso)">
        <div id="popup-calendario-buscar-anio-subcaso-input" style="position:relative;display:none;z-index:1000;"></div>
      </div>
      <div class="field-block">
        <label class="field-label" for="buscar-caso-subcaso">Caso:</label>
        <select id="buscar-caso-subcaso" onchange="llenarSubcasosBuscarSubcaso()"></select>
      </div>
      <div class="field-block">
        <label class="field-label" for="buscar-subcaso-subcaso">Subcaso:</label>
        <select id="buscar-subcaso-subcaso" onchange="buscarPorSubcaso()"></select>
      </div>
      <input id="filtro-buscar-caso-subcaso" type="text" placeholder="Filtrar por nombre..." style="width:100%;font-size:1em;padding:6px 10px;margin-bottom:8px;border-radius:6px;border:1px solid #bccce7;">
      <div id="lista-buscar-caso-subcaso" style="margin-top:8px"></div>
    </div>
    <div class="form-tip">
      Elija el criterio de b√∫squeda: a√±o, caso o subcaso.<br>
      Solo se mostrar√° la informaci√≥n relevante.
    </div>
  </div>
</div>
    </section>
  </div>
</div>
<script>
  // Variables de sistema
  var fso = new ActiveXObject("Scripting.FileSystemObject");
  var shell = new ActiveXObject("WScript.Shell");
  var desktop = shell.SpecialFolders("Desktop");
  var nombreUsuario = "Jhonatan";
  var rolUsuario = "Administrador";

 //Paginaciones en "Buscar"
  var paginaActualSubcasos = 1;
  var subcasosPorPagina = 3;
  var subcasosFiltrados = []; // Para guardar el resultado filtrado

  var paginaActualCasosAnio = 1;
  var casosPorPagina = 3;
  var casosFiltradosAnio = [];

  var paginaActualArchivosSubcaso = 1;
  var archivosPorPagina = 3;
  var archivosFiltradosSubcaso = [];

  //VARIABLES PAGINACI√ìN B√öSQUEDA AVANZADA
  var resultadosBusquedaAvanzada = [];
  var paginaActualBusquedaAvanzada = 1;
  var resultadosPorPaginaAvanzada = 5;

  //VARIABES SECCI√ìN FORMATOS
  var formatosDetectados = [];
  var formatosFiltrados = [];
  var paginaFormatos = 1;
  var formatosPorPagina = 10;
  var formatoSeleccionado = null;


  // Secci√≥n y men√∫
function mostrarSeccion(seccion) {
  // Oculta todas las secciones
  var secciones = [
    "seccion-inicio",
    "seccion-crear-caso",
    "seccion-crear-oficios",
    "seccion-buscar-caso",
    "seccion-busqueda-avanzada"
  ];
  for (var i = 0; i < secciones.length; i++) {
    var sec = document.getElementById(secciones[i]);
    if (sec) sec.style.display = "none";
  }
  // Quita 'active' de todos los botones
  var botones = [
    "btn-inicio",
    "btn-crear-caso",
    "btn-crear-oficios",
    "btn-buscar-caso",
    "btn-busqueda-avanzada"
  ];
  for (var i = 0; i < botones.length; i++) {
    var btn = document.getElementById(botones[i]);
    if (btn) btn.classList.remove("active");
  }
  // Muestra solo la secci√≥n correspondiente
  var secActual = document.getElementById("seccion-" + seccion);
  if (secActual) secActual.style.display = "block";
  // Pone el bot√≥n en active
  var btnActual = document.getElementById("btn-" + seccion);
  if (btnActual) btnActual.classList.add("active");

  // Si se selecciona "crear-oficios", recarga los formatos y combos de a√±o/caso/subcaso
  if (seccion === "crear-oficios") {
    cargarFormatosOficios();
  }
}

  function mostrarCrearPaso(tipo) {
    var botones = ["btn-opcion-anio","btn-opcion-caso","btn-opcion-subcaso"];
    for (var i=0; i<botones.length; i++) {
      document.getElementById(botones[i]).classList.remove("selected");
    }
    var formularios = ["form-crear-anio","form-crear-caso","form-crear-subcaso"];
    for (var i=0; i<formularios.length; i++) {
      document.getElementById(formularios[i]).style.display="none";
    }
    document.getElementById('crear-feedback-guiado').innerHTML = "";
    if(tipo==="anio") {
      document.getElementById('btn-opcion-anio').classList.add('selected');
      document.getElementById('form-crear-anio').style.display="block";
    } else if(tipo==="caso") {
      document.getElementById('btn-opcion-caso').classList.add('selected');
      llenarAniosGuiado("select-anio-guiado");
      document.getElementById('form-crear-caso').style.display="block";
    } else if(tipo==="subcaso") {
      document.getElementById('btn-opcion-subcaso').classList.add('selected');
      llenarAniosGuiado("select-anio-guiado2");
      document.getElementById('form-crear-subcaso').style.display="block";
      setTimeout(llenarCasosParaSubcaso, 50);
    }
  }
  function llenarAniosGuiado(idSelect) {
    var select = document.getElementById(idSelect);
    select.innerHTML = "";
    var anios = [];
    try {
      var carpetaEnum = new Enumerator(fso.GetFolder(desktop).SubFolders);
      for (; !carpetaEnum.atEnd(); carpetaEnum.moveNext()) {
        var nombre = carpetaEnum.item().Name;
        if (nombre.match(/^A√±o \d{4}$/)) { anios.push(nombre.replace("A√±o ", "")); }
      }
    } catch (e) {}
    anios.sort();
    for (var i=0; i<anios.length; i++) {
      var opt = document.createElement("option");
      opt.value = anios[i];
      opt.text = anios[i];
      select.appendChild(opt);
    }
  }
  function llenarCasosParaSubcaso() {
    var anio = document.getElementById('select-anio-guiado2').value;
    var selectCaso = document.getElementById('select-caso-guiado');
    selectCaso.innerHTML = "";
    if (!anio) return;
    var ruta = desktop + "\\A√±o " + anio;
    if (!fso.FolderExists(ruta)) return;
    var casos = [];
    try {
      var casoEnum = new Enumerator(fso.GetFolder(ruta).SubFolders);
      for (; !casoEnum.atEnd(); casoEnum.moveNext()) {
        casos.push(casoEnum.item().Name);
      }
    } catch (e) {}
    casos.sort();
    for (var i=0; i<casos.length; i++) {
      var opt = document.createElement("option");
      opt.value = casos[i];
      opt.text = casos[i];
      selectCaso.appendChild(opt);
    }
  }
  function crearAnioGuiado() {
    var anio = document.getElementById('input-anio-guiado').value.trim();
    var feedback = document.getElementById('crear-feedback-guiado');
    feedback.innerHTML = "";
    if (!anio.match(/^\d{4}$/)) {
      feedback.innerHTML = '<div class="feedback-error">El a√±o debe ser num√©rico de 4 d√≠gitos.</div>';
      return;
    }
    var ruta = desktop + "\\A√±o " + anio;
    if (!fso.FolderExists(ruta)) {
      fso.CreateFolder(ruta);
      feedback.innerHTML = '<div class="feedback-success">A√±o creado correctamente: ' + ruta + '</div>';
      document.getElementById('input-anio-guiado').value = "";
    } else {
      feedback.innerHTML = '<div class="feedback-error">El a√±o ya existe: ' + ruta + '</div>';
    }
    llenarAniosGuiado("select-anio-guiado");
    llenarAniosGuiado("select-anio-guiado2");
  }
  function crearCasoGuiado() {
    var anio = document.getElementById('select-anio-guiado').value;
    var caso = document.getElementById('input-caso-guiado').value.trim();
    var feedback = document.getElementById('crear-feedback-guiado');
    feedback.innerHTML = "";
    if (!anio || !anio.match(/^\d{4}$/)) {
      feedback.innerHTML = '<div class="feedback-error">Seleccione un a√±o v√°lido.</div>';
      return;
    }
    if (!caso) {
      feedback.innerHTML = '<div class="feedback-error">Ingrese el nombre del caso.</div>';
      return;
    }
    if (caso.match(/[\\\/:*?"<>|]/)) {
      feedback.innerHTML = '<div class="feedback-error">El caso contiene caracteres no permitidos.</div>';
      return;
    }
    var ruta = desktop + "\\A√±o " + anio + "\\" + caso;
    if (!fso.FolderExists(ruta)) {
      fso.CreateFolder(ruta);
      feedback.innerHTML = '<div class="feedback-success">Caso creado correctamente: ' + ruta + '</div>';
      document.getElementById('input-caso-guiado').value = "";
    } else {
      feedback.innerHTML = '<div class="feedback-error">El caso ya existe: ' + ruta + '</div>';
    }
    llenarAniosGuiado("select-anio-guiado");
    llenarAniosGuiado("select-anio-guiado2");
  }
  function crearSubcasoGuiado() {
    var anio = document.getElementById('select-anio-guiado2').value;
    var caso = document.getElementById('select-caso-guiado').value;
    var subcaso = document.getElementById('input-subcaso-guiado').value.trim();
    var feedback = document.getElementById('crear-feedback-guiado');
    feedback.innerHTML = "";
    if (!anio || !anio.match(/^\d{4}$/)) {
      feedback.innerHTML = '<div class="feedback-error">Seleccione un a√±o v√°lido.</div>';
      return;
    }
    if (!caso) {
      feedback.innerHTML = '<div class="feedback-error">Seleccione un caso.</div>';
      return;
    }
    if (!subcaso) {
      feedback.innerHTML = '<div class="feedback-error">Ingrese el nombre del subcaso.</div>';
      return;
    }
    if (subcaso.match(/[\\\/:*?"<>|]/)) {
      feedback.innerHTML = '<div class="feedback-error">El subcaso contiene caracteres no permitidos.</div>';
      return;
    }
    var ruta = desktop + "\\A√±o " + anio + "\\" + caso + "\\" + subcaso;
    if (!fso.FolderExists(ruta)) {
      fso.CreateFolder(ruta);
      feedback.innerHTML = '<div class="feedback-success">Subcaso creado correctamente: ' + ruta + '</div>';
      document.getElementById('input-subcaso-guiado').value = "";
    } else {
      feedback.innerHTML = '<div class="feedback-error">El subcaso ya existe: ' + ruta + '</div>';
    }
    llenarAniosGuiado("select-anio-guiado");
    llenarAniosGuiado("select-anio-guiado2");
  }
  // Barra de usuario
  function cerrarSesion() { window.close(); }
  function actualizarBarraUsuario() {
    var avatar = document.getElementById('user-avatar');
    var name = document.getElementById('user-name');
    var role = document.getElementById('user-role');
    if (avatar) avatar.textContent = (nombreUsuario && nombreUsuario.length > 0 ? nombreUsuario[0].toUpperCase() : '?');
    if (name) name.textContent = nombreUsuario || "Usuario";
    if (role) role.textContent = rolUsuario || "Usuario";
  }
  actualizarBarraUsuario();
  // Fecha y hora actual
  function actualizarFechaHora() {
    var now = new Date();
    var opciones = { year: 'numeric', month: 'long', day: 'numeric' };
    var fecha = now.toLocaleDateString('es-ES', opciones);
    var h = now.getHours(), m = now.getMinutes(), s = now.getSeconds();
    var hora =
      (h < 10 ? '0' : '') + h + ':' +
      (m < 10 ? '0' : '') + m + ':' +
      (s < 10 ? '0' : '') + s;
    var texto = '<span style="margin-right:10px;"><b>' + fecha + '</b></span> <span style="font-size:1em;">' + hora + '</span>';
    var bars = document.getElementsByClassName('datetime-bar');
    for (var i = 0; i < bars.length; i++) bars[i].innerHTML = texto;
  }
  setInterval(actualizarFechaHora, 1000);
  // Buscar caso flexible
function mostrarBuscarPaso(tipo) {
  var botones = ["btn-buscar-anio","btn-buscar-caso2","btn-buscar-subcaso2"];
  for (var i=0; i<botones.length; i++) {
    document.getElementById(botones[i]).classList.remove("selected");
  }
  var formularios = ["form-buscar-anio","form-buscar-caso2","form-buscar-subcaso2"];
  for (var i=0; i<formularios.length; i++) {
    document.getElementById(formularios[i]).style.display="none";
  }
  if(tipo==="anio") {
    document.getElementById("btn-buscar-anio").classList.add("selected");
    document.getElementById("form-buscar-anio").style.display="block";
    autoSeleccionarAnioActual("buscar-anio-flex-input", buscarPorAnio);
  } else if(tipo==="caso") {
    document.getElementById("btn-buscar-caso2").classList.add("selected");
    document.getElementById("form-buscar-caso2").style.display="block";
    autoSeleccionarAnioActual("buscar-anio-caso-input", llenarCasosBuscarCaso);
  } else if(tipo==="subcaso") {
    document.getElementById("btn-buscar-subcaso2").classList.add("selected");
    document.getElementById("form-buscar-subcaso2").style.display="block";
    autoSeleccionarAnioActual("buscar-anio-subcaso-input", llenarCasosBuscarSubcaso);
  }
}
  function llenarAniosBuscar(idSelect) {
    var select = document.getElementById(idSelect);
    var anios = [];
    try {
      var carpetaEnum = new Enumerator(fso.GetFolder(desktop).SubFolders);
      for (; !carpetaEnum.atEnd(); carpetaEnum.moveNext()) {
        var nombre = carpetaEnum.item().Name;
        if (nombre.match(/^A√±o \d{4}$/)) anios.push(nombre.replace("A√±o ",""));
      }
    } catch(e) {}
    anios.sort();
    for (var i=0; i<anios.length; i++) {
      var opt = document.createElement("option");
      opt.value = anios[i];
      opt.text = anios[i];
    }
  }

    function buscarPorAnio(pagina) {
    var anio = document.getElementById("buscar-anio-flex-input").value;
    var filtro = document.getElementById("filtro-buscar-caso-anio").value.trim().toLowerCase();
    var div = document.getElementById("lista-buscar-caso-anio");
    div.innerHTML = "";
    if (!anio) {
      div.innerHTML = "<span style='color:#b00020;'>Seleccione un a√±o.</span>";
      return;
    }
    var ruta = desktop + "\\A√±o " + anio;
    if (!fso.FolderExists(ruta)) {
      div.innerHTML = "<span style='color:#b00020;'>El a√±o seleccionado no existe.</span>";
      return;
    }
    var casos = [];
    try {
      var casosEnum = new Enumerator(fso.GetFolder(ruta).SubFolders);
      for (; !casosEnum.atEnd(); casosEnum.moveNext()) {
        var nombre = casosEnum.item().Name;
        if (filtro === "" || nombre.toLowerCase().indexOf(filtro) !== -1) casos.push(nombre);
      }
    } catch(e) {}

    // Paginaci√≥n
    casosFiltradosAnio = casos;
    paginaActualCasosAnio = pagina || 1;
    var totalPaginas = Math.ceil(casosFiltradosAnio.length / casosPorPagina);
    if (paginaActualCasosAnio > totalPaginas) paginaActualCasosAnio = totalPaginas;
    if (paginaActualCasosAnio < 1) paginaActualCasosAnio = 1;
    var inicio = (paginaActualCasosAnio - 1) * casosPorPagina;
    var fin = inicio + casosPorPagina;
    var casosPagina = casosFiltradosAnio.slice(inicio, fin);

    if (casosFiltradosAnio.length === 0) {
      div.innerHTML = "<span style='color:#888;'>No hay casos en este a√±o.</span>";
      return;
    }
    var html = "<div style='font-weight:600;color:#17406a;'>Casos en a√±o " + anio + ":</div>";
    html += "<ul style='padding-left:16px;'>";
    for (var i = 0; i < casosPagina.length; i++) {
      var c = casosPagina[i];
      html += "<li style='margin-bottom:6px;'><b>" + c + "</b> <button class='boton' style='padding:4px 14px;font-size:.96em;' onclick='abrirRuta(\"" +
        (ruta + "\\" + c).replace(/\\/g, '\\\\') +
        "\")'>Abrir carpeta</button></li>";
    }
    html += "</ul>";

    // Controles de paginaci√≥n
    if (totalPaginas > 1) {
      html += "<div style='text-align:center;margin:10px 0;'>";
      html += "<button class='boton' style='padding:2px 10px;margin-right:8px;' onclick='cambiarPaginaCasosAnio(-1)' " + (paginaActualCasosAnio == 1 ? "disabled" : "") + ">Anterior</button>";
      html += "<span style='margin:0 12px;'>P√°gina " + paginaActualCasosAnio + " de " + totalPaginas + "</span>";
      html += "<button class='boton' style='padding:2px 10px;margin-left:8px;' onclick='cambiarPaginaCasosAnio(1)' " + (paginaActualCasosAnio == totalPaginas ? "disabled" : "") + ">Siguiente</button>";
      html += "</div>";
    }
    div.innerHTML = html;
  }
  function cambiarPaginaCasosAnio(direccion) {
    buscarPorAnio(paginaActualCasosAnio + direccion);
  }
  document.getElementById("filtro-buscar-caso-anio").onkeyup = function() {
    buscarPorAnio(1);
  };

  // ---- PAGINACI√ìN POR CASO (ya la tienes, solo aseg√∫rate que el filtro reinicie p√°gina) ----
  document.getElementById("filtro-buscar-caso-caso").onkeyup = function() {
    buscarPorCaso(1);
  };


  function llenarCasosBuscarCaso() {
    var anio = document.getElementById("buscar-anio-caso-input").value;
    var select = document.getElementById("buscar-caso-caso");
    select.innerHTML = "";
    if (!anio) return;
    var ruta = desktop + "\\A√±o " + anio;
    if (!fso.FolderExists(ruta)) return;
    var casos = [];
    try {
      var casosEnum = new Enumerator(fso.GetFolder(ruta).SubFolders);
      for (; !casosEnum.atEnd(); casosEnum.moveNext()) {
        casos.push(casosEnum.item().Name);
      }
    } catch(e) {}
    casos.sort();
    for (var i=0; i<casos.length; i++) {
      var opt = document.createElement("option");
      opt.value = casos[i];
      opt.text = casos[i];
      select.appendChild(opt);
    }
    buscarPorCaso();
  }
  function buscarPorCaso(pagina) {
  var anio = document.getElementById("buscar-anio-caso-input").value;
  var caso = document.getElementById("buscar-caso-caso").value;
  var filtro = document.getElementById("filtro-buscar-caso-caso").value.trim().toLowerCase();
  var div = document.getElementById("lista-buscar-caso-caso");
  div.innerHTML = "";

  if (!anio || !caso) {
    div.innerHTML = "<span style='color:#b00020;'>Seleccione a√±o y caso.</span>";
    return;
  }

  var ruta = desktop + "\\A√±o " + anio + "\\" + caso;
  if (!fso.FolderExists(ruta)) {
    div.innerHTML = "<span style='color:#b00020;'>El caso seleccionado no existe.</span>";
    return;
  }

  // Obtener subcasos filtrados y archivos normalmente
  var subcasos = [];
  try {
    var subEnum = new Enumerator(fso.GetFolder(ruta).SubFolders);
    for (; !subEnum.atEnd(); subEnum.moveNext()) {
      var nombre = subEnum.item().Name;
      if (filtro == "" || nombre.toLowerCase().indexOf(filtro) !== -1) subcasos.push(nombre);
    }
  } catch(e) {}

  // Guardar el resultado filtrado en variable global para paginaci√≥n
  subcasosFiltrados = subcasos;

  // Paginaci√≥n
  paginaActualSubcasos = pagina || 1;
  var totalPaginas = Math.ceil(subcasosFiltrados.length / subcasosPorPagina);
  if (paginaActualSubcasos > totalPaginas) paginaActualSubcasos = totalPaginas;
  if (paginaActualSubcasos < 1) paginaActualSubcasos = 1;
  var inicio = (paginaActualSubcasos - 1) * subcasosPorPagina;
  var fin = inicio + subcasosPorPagina;
  var subcasosPagina = subcasosFiltrados.slice(inicio, fin);

  var archivos = [];
  try {
    var filesEnum = new Enumerator(fso.GetFolder(ruta).Files);
    for (; !filesEnum.atEnd(); filesEnum.moveNext()) {
      var nombre = filesEnum.item().Name;
      if (filtro == "" || nombre.toLowerCase().indexOf(filtro) !== -1) archivos.push(nombre);
    }
  } catch(e) {}

  var html = "";
  if (subcasosFiltrados.length > 0) {
    html += "<div style='font-weight:600;color:#17406a;'>Subcasos:</div><ul style='padding-left:16px;'>";
    for (var i = 0; i < subcasosPagina.length; i++) {
      var sub = subcasosPagina[i];
      html += "<li style='margin-bottom:6px;'><b>" + sub + "</b> <button class='boton' style='padding:4px 14px;font-size:.96em;' onclick='abrirRuta(\"" + ruta + "\\" + sub + "\")'>Abrir carpeta</button></li>";
    }
    html += "</ul>";

    // Controles de paginaci√≥n
    if (totalPaginas > 1) {
      html += "<div style='text-align:center;margin:10px 0;'>";
      html += "<button class='boton' style='padding:2px 10px;margin-right:8px;' onclick='cambiarPaginaSubcasos(-1)' " + (paginaActualSubcasos == 1 ? "disabled" : "") + ">Anterior</button>";
      html += "<span style='margin:0 12px;'>P√°gina " + paginaActualSubcasos + " de " + totalPaginas + "</span>";
      html += "<button class='boton' style='padding:2px 10px;margin-left:8px;' onclick='cambiarPaginaSubcasos(1)' " + (paginaActualSubcasos == totalPaginas ? "disabled" : "") + ">Siguiente</button>";
      html += "</div>";
    }
  }

  if (archivos.length > 0) {
    html += "<div style='font-weight:600;color:#205085;'>Archivos en el caso:</div><ul style='padding-left:16px;'>";
    for (var i = 0; i < archivos.length; i++) {
      var arch = archivos[i];
      html += "<li style='margin-bottom:6px;'>" + arch + " <button class='boton' style='padding:4px 14px;font-size:.96em;' onclick='abrirRuta(\"" + ruta + "\")'>Abrir carpeta</button></li>";
    }
    html += "</ul>";
  }
  if (html === "") html = "<span style='color:#888;'>No hay subcasos ni archivos en este caso.</span>";
  div.innerHTML = html;
}
document.getElementById("filtro-buscar-caso-caso").onkeyup = function() {
  buscarPorCaso(1);
};

function cambiarPaginaSubcasos(direccion) {
  buscarPorCaso(paginaActualSubcasos + direccion);
}

function llenarCasosBuscarSubcaso() {
    var anio = document.getElementById("buscar-anio-subcaso-input").value;
    var select = document.getElementById("buscar-caso-subcaso");
    select.innerHTML = "";
    if (!anio) return;
    var ruta = desktop + "\\A√±o " + anio;
    if (!fso.FolderExists(ruta)) return;
    var casos = [];
    try {
      var casosEnum = new Enumerator(fso.GetFolder(ruta).SubFolders);
      for (; !casosEnum.atEnd(); casosEnum.moveNext()) {
        casos.push(casosEnum.item().Name);
      }
    } catch(e) {}
    casos.sort();
    for (var i=0; i<casos.length; i++) {
      var opt = document.createElement("option");
      opt.value = casos[i];
      opt.text = casos[i];
      select.appendChild(opt);
    }
    llenarSubcasosBuscarSubcaso();
  }

function llenarSubcasosBuscarSubcaso() {
  var anio = document.getElementById("buscar-anio-subcaso-input").value;
  var caso = document.getElementById("buscar-caso-subcaso").value;
  var select = document.getElementById("buscar-subcaso-subcaso");
  select.innerHTML = "";
  if (!anio || !caso) return;
  var ruta = desktop + "\\A√±o " + anio + "\\" + caso;
  if (!fso.FolderExists(ruta)) return;
  var subcasos = [];
  try {
    var subEnum = new Enumerator(fso.GetFolder(ruta).SubFolders);
    for (; !subEnum.atEnd(); subEnum.moveNext()) {
      subcasos.push(subEnum.item().Name);
    }
  } catch(e) {}
  subcasos.sort();
  for (var i=0; i<subcasos.length; i++) {
    var opt = document.createElement("option");
    opt.value = subcasos[i];
    opt.text = subcasos[i];
    select.appendChild(opt);
  }
  buscarPorSubcaso();
}
  function buscarPorSubcaso(pagina) {
    var anio = document.getElementById("buscar-anio-subcaso-input").value;
    var caso = document.getElementById("buscar-caso-subcaso").value;
    var subcaso = document.getElementById("buscar-subcaso-subcaso").value;
    var filtro = document.getElementById("filtro-buscar-caso-subcaso").value.trim().toLowerCase();
    var div = document.getElementById("lista-buscar-caso-subcaso");
    div.innerHTML = "";
    if (!anio || !caso || !subcaso) {
      div.innerHTML = "<span style='color:#b00020;'>Seleccione a√±o, caso y subcaso.</span>";
      return;
    }
    var ruta = desktop + "\\A√±o " + anio + "\\" + caso + "\\" + subcaso;
    if (!fso.FolderExists(ruta)) {
      div.innerHTML = "<span style='color:#b00020;'>El subcaso seleccionado no existe.</span>";
      return;
    }
    var archivos = [];
    try {
      var filesEnum = new Enumerator(fso.GetFolder(ruta).Files);
      for (; !filesEnum.atEnd(); filesEnum.moveNext()) {
        var nombre = filesEnum.item().Name;
        if (filtro === "" || nombre.toLowerCase().indexOf(filtro) !== -1) archivos.push(nombre);
      }
    } catch(e) {}

    // Paginaci√≥n
    archivosFiltradosSubcaso = archivos;
    paginaActualArchivosSubcaso = pagina || 1;
    var totalPaginas = Math.ceil(archivosFiltradosSubcaso.length / archivosPorPagina);
    if (paginaActualArchivosSubcaso > totalPaginas) paginaActualArchivosSubcaso = totalPaginas;
    if (paginaActualArchivosSubcaso < 1) paginaActualArchivosSubcaso = 1;
    var inicio = (paginaActualArchivosSubcaso - 1) * archivosPorPagina;
    var fin = inicio + archivosPorPagina;
    var archivosPagina = archivosFiltradosSubcaso.slice(inicio, fin);

    var html = "";
if (archivosFiltradosSubcaso.length === 0) {
  div.innerHTML = "<span style='color:#888;'>No hay archivos en este subcaso.</span>";
  return;
}
html = "<div style='font-weight:600;color:#205085;'>Archivos en el subcaso:</div><ul style='padding-left:16px;'>";
for (var i = 0; i < archivosPagina.length; i++) {
  var arch = archivosPagina[i];
  var rutaArchivo = ruta + "\\" + arch;
  if (arch.match(/\.(docx?|DOCX?)$/)) {
    html += "<li style='margin-bottom:6px;'>" + arch +
      " <button class='boton' style='padding:4px 14px;font-size:.96em;' onclick='abrirWord(\"" + rutaArchivo.replace(/\\/g, '\\\\') + "\")'>Abrir Word</button></li>";
  } else {
    html += "<li style='margin-bottom:6px;'>" + arch + "</li>";
  }
}
html += "</ul>";

    // Controles de paginaci√≥n
    if (totalPaginas > 1) {
      html += "<div style='text-align:center;margin:10px 0;'>";
      html += "<button class='boton' style='padding:2px 10px;margin-right:8px;' onclick='cambiarPaginaArchivosSubcaso(-1)' " + (paginaActualArchivosSubcaso == 1 ? "disabled" : "") + ">Anterior</button>";
      html += "<span style='margin:0 12px;'>P√°gina " + paginaActualArchivosSubcaso + " de " + totalPaginas + "</span>";
      html += "<button class='boton' style='padding:2px 10px;margin-left:8px;' onclick='cambiarPaginaArchivosSubcaso(1)' " + (paginaActualArchivosSubcaso == totalPaginas ? "disabled" : "") + ">Siguiente</button>";
      html += "</div>";
    }
    div.innerHTML = html;
  }
  function cambiarPaginaArchivosSubcaso(direccion) {
    buscarPorSubcaso(paginaActualArchivosSubcaso + direccion);
  }
  document.getElementById("filtro-buscar-caso-subcaso").onkeyup = function() {
    buscarPorSubcaso(1);
  };

function abrirWord(rutaArchivo) {
  if (fso.FileExists(rutaArchivo)) {
    shell.Run('"' + rutaArchivo + '"', 1, false);
  } else {
    alert("El archivo no existe.");
  }
}

// Utilidad: Devuelve un array de a√±os disponibles (extrae "A√±o 2025" ‚Üí 2025) del escritorio
function obtenerAniosEnEscritorio() {
  var anios = [];
  try {
    var carpetaEnum = new Enumerator(fso.GetFolder(desktop).SubFolders);
    for (; !carpetaEnum.atEnd(); carpetaEnum.moveNext()) {
      var nombre = carpetaEnum.item().Name;
      if (/^A√±o \d{4}$/.test(nombre)) anios.push(Number(nombre.substr(4)));
    }
  } catch(e) {}
  anios.sort(function(a,b){return b-b;});
  return anios;
}

// Mostrar calendario visual de a√±os para los campos de b√∫squeda
function mostrarCalendarioBuscarAnio(inputId, callbackSeleccion) {
  var input = document.getElementById(inputId);
  var popupId = "popup-calendario-" + inputId;
  var popup = document.getElementById(popupId);

  // Si ya est√° visible, ocultar
  if (popup.style.display === "block") {
    popup.style.display = "none";
    popup.innerHTML = "";
    return;
  }
  // Obtener a√±os
  var aniosDisponibles = obtenerAniosEnEscritorio();
  var yearsPerPage = 3;
  var pagina = 0;
  var totalPaginas = Math.ceil(aniosDisponibles.length / yearsPerPage);

  function renderPagina(pag) {
    pagina = pag;
    var inicio = pagina * yearsPerPage;
    var fin = Math.min(inicio + yearsPerPage, aniosDisponibles.length);
    var html = '<div style="position:absolute;top:0;left:0;background:#fff;border:1px solid #ccc;box-shadow:0 4px 18px #2222;border-radius:6px;padding:18px 10px 8px 10px;min-width:220px;">';
    html += '<div style="font-weight:bold;font-size:1.1em;text-align:center;margin-bottom:12px;">Seleccione un a√±o</div>';
    html += '<div style="display:grid;grid-template-columns:repeat(3,1fr);gap:8px;">';
    for (var i=inicio; i<fin; i++) {
      let anio = aniosDisponibles[i];
      html += '<div style="padding:10px 0;text-align:center;border-radius:6px;cursor:pointer;background:#f8f8f8;font-size:1.07em;margin-bottom:2px" onmouseover="this.style.background=\'#a3d06c\';this.style.color=\'#fff\'" onmouseout="this.style.background=\'#f8f8f8\';this.style.color=\'#222\'" onclick="seleccionarAnioCalendario(\''+inputId+'\','+anio+',\''+popupId+'\', '+(callbackSeleccion?1:0)+')">' + anio + '</div>';
    }
    html += '</div>';
    html += '<div style="text-align:center;margin-top:10px;">';
    if (pagina > 0) html += '<button onclick="document.getElementById(\''+popupId+'\')._render('+ (pagina-1) +');event.stopPropagation();">Anterior</button> ';
    html += 'P√°gina '+ (pagina+1) +' de '+ totalPaginas;
    if (pagina < totalPaginas-1) html += ' <button onclick="document.getElementById(\''+popupId+'\')._render('+ (pagina+1) +');event.stopPropagation();">Siguiente</button>';
    html += '</div>';
    html += '<div style="text-align:center;margin-top:8px;"><button onclick="document.getElementById(\''+popupId+'\').style.display=\'none\';document.getElementById(\''+popupId+'\').innerHTML=\'\';">Cerrar</button></div>';
    html += '</div>';
    popup.innerHTML = html;
    popup.style.display = "block";
    popup._render = renderPagina;
  }
  renderPagina(0);
}

// Selecciona a√±o desde el calendario visual, lo pone en el input y dispara el callback si hay
function seleccionarAnioCalendario(inputId, anio, popupId, callbackFlag) {
  var input = document.getElementById(inputId);
  input.value = anio;
  var popup = document.getElementById(popupId);
  popup.style.display = "none";
  popup.innerHTML = "";
  // Si hay que disparar un callback (ej: buscarPorAnio, llenarCasosBuscarCaso, llenarCasosBuscarSubcaso)
  if (callbackFlag) {
    if (inputId === "buscar-anio-flex-input") buscarPorAnio();
    else if (inputId === "buscar-anio-caso-input") llenarCasosBuscarCaso();
    else if (inputId === "buscar-anio-subcaso-input") llenarCasosBuscarSubcaso();
  }
}

function autoSeleccionarAnioActual(inputId, callbackSeleccion) {
  var hoy = new Date();
  var anioActual = hoy.getFullYear().toString();
  var carpetaAnio = "A√±o " + anioActual;
  try {
    var existe = false;
    var carpetaEnum = new Enumerator(fso.GetFolder(desktop).SubFolders);
    for (; !carpetaEnum.atEnd(); carpetaEnum.moveNext()) {
      var nombre = carpetaEnum.item().Name;
      if (nombre === carpetaAnio) { existe = true; break; }
    }
    if (existe) {
      document.getElementById(inputId).value = anioActual;
      if (typeof callbackSeleccion === "function") callbackSeleccion();
    }
  } catch(e) {}
}

// Cambia los scripts de los select por los nuevos inputs en buscar (en tu inicializaci√≥n)
function getBuscarAnio() {
  return document.getElementById("buscar-anio-flex-input").value;
}
function getBuscarAnioCaso() {
  return document.getElementById("buscar-anio-caso-input").value;
}
function getBuscarAnioSubcaso() {
  return document.getElementById("buscar-anio-subcaso-input").value;
}


//B√∫squeda avanzada
function mostrarSeccionBusquedaAvanzada() {
  mostrarSeccion('busqueda-avanzada');
}

function buscarAvanzado() {
  var palabra = document.getElementById("input-busqueda-avanzada").value.trim().toLowerCase();
  var div = document.getElementById("resultados-busqueda-avanzada");
  div.innerHTML = "";
  if (!palabra) {
    div.innerHTML = "<span style='color:#b00020;'>Ingrese un nombre o palabra a buscar.</span>";
    resultadosBusquedaAvanzada = [];
    paginaActualBusquedaAvanzada = 1;
    return;
  }
  var resultados = [];
  try {
    var carpetaEnum = new Enumerator(fso.GetFolder(desktop).SubFolders);
    for (; !carpetaEnum.atEnd(); carpetaEnum.moveNext()) {
      var nombreAnio = carpetaEnum.item().Name;
      if (!/^A√±o \d{4}$/.test(nombreAnio)) continue;
      var rutaAnio = desktop + "\\" + nombreAnio;
      // Buscar en archivos Word del a√±o
      try {
        var filesEnum = new Enumerator(fso.GetFolder(rutaAnio).Files);
        for (; !filesEnum.atEnd(); filesEnum.moveNext()) {
          var fileName = filesEnum.item().Name;
          if (fileName.match(/\.(docx?|DOCX?)$/) && fileName.toLowerCase().indexOf(palabra) !== -1) {
            resultados.push({
              anio: nombreAnio.replace("A√±o ",""),
              caso: "",
              subcaso: "",
              word: fileName,
              ruta: rutaAnio
            });
          }
        }
      } catch(e) {}
      var casosEnum = new Enumerator(fso.GetFolder(rutaAnio).SubFolders);
      for (; !casosEnum.atEnd(); casosEnum.moveNext()) {
        var nombreCaso = casosEnum.item().Name;
        var rutaCaso = rutaAnio + "\\" + nombreCaso;
        // Buscar en archivos Word del caso
        try {
          var filesEnum = new Enumerator(fso.GetFolder(rutaCaso).Files);
          for (; !filesEnum.atEnd(); filesEnum.moveNext()) {
            var fileName = filesEnum.item().Name;
            if (fileName.match(/\.(docx?|DOCX?)$/) && fileName.toLowerCase().indexOf(palabra) !== -1) {
              resultados.push({
                anio: nombreAnio.replace("A√±o ",""),
                caso: nombreCaso,
                subcaso: "",
                word: fileName,
                ruta: rutaCaso
              });
            }
          }
        } catch(e) {}
        var subcasosEnum = new Enumerator(fso.GetFolder(rutaCaso).SubFolders);
        for (; !subcasosEnum.atEnd(); subcasosEnum.moveNext()) {
          var nombreSubcaso = subcasosEnum.item().Name;
          var rutaSubcaso = rutaCaso + "\\" + nombreSubcaso;
          // Buscar en archivos Word del subcaso
          try {
            var filesEnum = new Enumerator(fso.GetFolder(rutaSubcaso).Files);
            for (; !filesEnum.atEnd(); filesEnum.moveNext()) {
              var fileName = filesEnum.item().Name;
              if (fileName.match(/\.(docx?|DOCX?)$/) && fileName.toLowerCase().indexOf(palabra) !== -1) {
                resultados.push({
                  anio: nombreAnio.replace("A√±o ",""),
                  caso: nombreCaso,
                  subcaso: nombreSubcaso,
                  word: fileName,
                  ruta: rutaSubcaso
                });
              }
            }
          } catch(e) {}
          // Adem√°s, si el subcaso hace match por nombre
          var matchSubcaso = nombreSubcaso.toLowerCase().indexOf(palabra) !== -1;
          if (matchSubcaso) {
            var wordCount = 0;
            try {
              var filesEnum = new Enumerator(fso.GetFolder(rutaSubcaso).Files);
              for (; !filesEnum.atEnd(); filesEnum.moveNext()) {
                var fileName = filesEnum.item().Name;
                if (fileName.match(/\.(docx?|DOCX?)$/)) wordCount++;
              }
            } catch(e) {}
            resultados.push({
              anio: nombreAnio.replace("A√±o ",""),
              caso: nombreCaso,
              subcaso: nombreSubcaso,
              word: "",
              cantidadWords: wordCount,
              ruta: rutaSubcaso
            });
          }
        }
        // Si el caso hace match
        var matchCaso = nombreCaso.toLowerCase().indexOf(palabra) !== -1;
        if (matchCaso) {
          var wordCount = 0;
          try {
            var filesEnum = new Enumerator(fso.GetFolder(rutaCaso).Files);
            for (; !filesEnum.atEnd(); filesEnum.moveNext()) {
              var fileName = filesEnum.item().Name;
              if (fileName.match(/\.(docx?|DOCX?)$/)) wordCount++;
            }
          } catch(e) {}
          resultados.push({
            anio: nombreAnio.replace("A√±o ",""),
            caso: nombreCaso,
            subcaso: "",
            word: "",
            cantidadWords: wordCount,
            ruta: rutaCaso
          });
        }
      }
      // Si el a√±o hace match
      if (nombreAnio.toLowerCase().indexOf(palabra) !== -1) {
        var wordCount = 0;
        try {
          var filesEnum = new Enumerator(fso.GetFolder(rutaAnio).Files);
          for (; !filesEnum.atEnd(); filesEnum.moveNext()) {
            var fileName = filesEnum.item().Name;
            if (fileName.match(/\.(docx?|DOCX?)$/)) wordCount++;
          }
        } catch(e) {}
        resultados.push({
          anio: nombreAnio.replace("A√±o ",""),
          caso: "",
          subcaso: "",
          word: "",
          cantidadWords: wordCount,
          ruta: rutaAnio
        });
      }
    }
  } catch(e) {
    div.innerHTML = "<span style='color:#b00020;'>Error al buscar: " + e.message + "</span>";
    resultadosBusquedaAvanzada = [];
    paginaActualBusquedaAvanzada = 1;
    return;
  }
  resultadosBusquedaAvanzada = resultados;
  paginaActualBusquedaAvanzada = 1;
  renderPaginaBusquedaAvanzada();
}

function renderPaginaBusquedaAvanzada() {
  var div = document.getElementById("resultados-busqueda-avanzada");
  var total = resultadosBusquedaAvanzada.length;
  if (total === 0) {
    div.innerHTML = "<span style='color:#888;'>No se encontraron resultados.</span>";
    return;
  }
  var totalPaginas = Math.ceil(total / resultadosPorPaginaAvanzada);
  if (paginaActualBusquedaAvanzada < 1) paginaActualBusquedaAvanzada = 1;
  if (paginaActualBusquedaAvanzada > totalPaginas) paginaActualBusquedaAvanzada = totalPaginas;
  var inicio = (paginaActualBusquedaAvanzada - 1) * resultadosPorPaginaAvanzada;
  var fin = Math.min(inicio + resultadosPorPaginaAvanzada, total);
  var pagina = resultadosBusquedaAvanzada.slice(inicio, fin);

  var html = "<table style='width:100%;border-collapse:collapse;font-size:1em;'>";
  html += "<tr style='background:#eaf0f7;font-weight:600;'><td>A√±o</td><td>Caso</td><td>Subcaso</td><td>Word</td><td style='text-align:center;'>#Words</td><td></td></tr>";
  for (var i=0; i<pagina.length; i++) {
    var r = pagina[i];
    html += "<tr style='border-bottom:1px solid #e0e5ee;'>";
    html += "<td>" + (r.anio||"") + "</td>";
    html += "<td>" + (r.caso||"") + "</td>";
    html += "<td>" + (r.subcaso||"") + "</td>";
    html += "<td>" + (r.word||"") + "</td>";
    html += "<td style='text-align:center;'>" + (typeof r.cantidadWords !== "undefined" ? r.cantidadWords : (r.word ? "1" : "")) + "</td>";
    html += "<td><button class='boton' style='padding:4px 14px;font-size:.97em;' onclick='abrirRuta(\"" + r.ruta.replace(/\\/g, '\\\\') + "\")'>Abrir carpeta</button></td>";
    html += "</tr>";
  }
  html += "</table>";
  // Controles de paginaci√≥n
  if (totalPaginas > 1) {
    html += "<div style='text-align:center;margin:12px 0 0 0;'>";
    html += "<button class='boton' style='padding:2px 10px;margin-right:8px;' onclick='cambiarPaginaBusquedaAvanzada(-1)' " + (paginaActualBusquedaAvanzada === 1 ? "disabled" : "") + ">Anterior</button>";
    html += "<span style='margin:0 12px;'>P√°gina " + paginaActualBusquedaAvanzada + " de " + totalPaginas + "</span>";
    html += "<button class='boton' style='padding:2px 10px;margin-left:8px;' onclick='cambiarPaginaBusquedaAvanzada(1)' " + (paginaActualBusquedaAvanzada === totalPaginas ? "disabled" : "") + ">Siguiente</button>";
    html += "</div>";
  }
  div.innerHTML = html;
}

function cambiarPaginaBusquedaAvanzada(direccion) {
  paginaActualBusquedaAvanzada += direccion;
  renderPaginaBusquedaAvanzada();
}

//Funciones secci√≥n formato
// Al abrir la secci√≥n, debes llamar a esta funci√≥n:
function cargarFormatosOficios() {
  var posiblesNombres = ["Formatos", "formatos"];
  var carpetaFormatos = null;
  for (var i = 0; i < posiblesNombres.length; i++) {
    var ruta = desktop + "\\" + posiblesNombres[i];
    if (fso.FolderExists(ruta)) {
      carpetaFormatos = ruta;
      break;
    }
  }
  if (!carpetaFormatos) {
    document.getElementById("cantidad-formatos").innerHTML = "Carpeta 'Formatos' NO encontrada en el Escritorio";
    document.getElementById("lista-formatos").innerHTML = "<span style='color:#b00020;'>Crea la carpeta 'Formatos' en tu Escritorio.</span>";
    formatoSeleccionado = null;
    return;
  }
  // Buscar archivos Word
  var formatos = [];
  try {
    var filesEnum = new Enumerator(fso.GetFolder(carpetaFormatos).Files);
    for (; !filesEnum.atEnd(); filesEnum.moveNext()) {
      var name = filesEnum.item().Name;
      if (name.match(/\.(docx?|dotx?|doc)$/i)) {
        formatos.push(name);
      }
    }
  } catch (e) {}
  // Filtrar
  var filtro = document.getElementById("filtro-formatos").value.trim().toLowerCase();
  var formatosFiltrados = [];
  for (var i = 0; i < formatos.length; i++) {
    var f = formatos[i];
    if (filtro === "" || f.toLowerCase().indexOf(filtro) !== -1) {
      formatosFiltrados.push(f);
    }
  }
  formatosDetectados = formatosFiltrados;
  document.getElementById("cantidad-formatos").innerHTML = "Formatos detectados: " + formatosFiltrados.length;
  // Render lista seleccionable
  var div = document.getElementById("lista-formatos");
  if (formatosFiltrados.length === 0) {
    div.innerHTML = "<span style='color:#888;'>No hay formatos que coincidan.</span>";
    formatoSeleccionado = null;
    return;
  }
  var html = "<ul style='padding-left:18px;'>";
  for (var i = 0; i < formatosFiltrados.length; i++) {
    var nombre = formatosFiltrados[i];
    var clase = (nombre === formatoSeleccionado) ? "background:#c9e1ff;font-weight:700;border-radius:7px;" : "";
    html += '<li style="cursor:pointer;padding:4px 0;' + clase + '" onclick="seleccionarFormatoOficio(\'' + nombre.replace(/'/g,"\\'") + '\')">' + nombre + '</li>';
  }
  html += "</ul>";
  div.innerHTML = html;
}

function seleccionarFormatoOficio(nombre) {
  formatoSeleccionado = nombre;
  cargarFormatosOficios(); // Esto fuerza a refrescar la lista y resaltar el seleccionado
}





function cargarCasosOficio() {
  var anio = document.getElementById("select-anio-oficio").value;
  var sel = document.getElementById("select-caso-oficio");
  sel.innerHTML = "";
  if (!anio) {
    setDebug("No hay a√±o seleccionado");
    return;
  }
  var ruta = desktop + "\\A√±o " + anio;
  setDebug("Buscando en: " + ruta);
  var casos = [];
  try {
    if (fso.FolderExists(ruta)) {
      var casosEnum = new Enumerator(fso.GetFolder(ruta).SubFolders);
      for (; !casosEnum.atEnd(); casosEnum.moveNext()) {
        var nombreCaso = casosEnum.item().Name;
        casos.push(nombreCaso);
      }
    } else {
      setDebug("No existe la carpeta: " + ruta);
    }
  } catch(e) {
    setDebug("Error leyendo casos: " + e.message);
  }
  if (casos.length === 0) {
    setDebug("No hay casos encontrados en: " + ruta);
  } else {
    setDebug("Casos encontrados: " + casos.join(", "));
    for (var i = 0; i < casos.length; i++) {
      var opt = document.createElement("option");
      opt.value = casos[i];
      opt.text = casos[i];
      sel.appendChild(opt);
    }
  }
  cargarSubcasosOficio();
}

function cargarSubcasosOficio() {
  var anio = document.getElementById("select-anio-oficio").value;
  var caso = document.getElementById("select-caso-oficio").value;
  var sel = document.getElementById("select-subcaso-oficio");
  sel.innerHTML = "";
  var opt0 = document.createElement("option");
  opt0.value = "";
  opt0.text = "(Sin subcaso)";
  sel.appendChild(opt0);
  if (!anio || !caso) return;
  var ruta = desktop + "\\A√±o " + anio + "\\" + caso;
  var subcasos = [];
  try {
    var subEnum = new Enumerator(fso.GetFolder(ruta).SubFolders);
    for (; !subEnum.atEnd(); subEnum.moveNext()) {
      subcasos.push(subEnum.item().Name);
    }
  } catch(e) {}
  subcasos.sort();
  for (var i = 0; i < subcasos.length; i++) {
    var opt = document.createElement("option");
    opt.value = subcasos[i];
    opt.text = subcasos[i];
    sel.appendChild(opt);
  }
}

// Filtrar y paginar
function filtrarFormatos() {
  alert("Formatos detectados al filtrar: " + JSON.stringify(formatosDetectados));
  var filtro = document.getElementById("filtro-formatos").value.trim().toLowerCase();
  formatosFiltrados = formatosDetectados.filter(function(nombre) {
    return nombre.toLowerCase().indexOf(filtro) !== -1;
  });
  paginaFormatos = 1;
  renderFormatosPaginados();
}

// Render paginaci√≥n
function renderFormatosPaginados() {
  var lista = document.getElementById("lista-formatos");
  var cantidad = document.getElementById("cantidad-formatos");
  cantidad.textContent = "Formatos detectados: " + formatosFiltrados.length;
  if (formatosFiltrados.length === 0) {
    lista.innerHTML = "<span style='color:#b00020;'>No se encontraron formatos.</span>";
    formatoSeleccionado = null;
    return;
  }
  var totalPaginas = Math.ceil(formatosFiltrados.length / formatosPorPagina);
  if (paginaFormatos < 1) paginaFormatos = 1;
  if (paginaFormatos > totalPaginas) paginaFormatos = totalPaginas;
  var inicio = (paginaFormatos-1)*formatosPorPagina;
  var fin = Math.min(inicio+formatosPorPagina, formatosFiltrados.length);
  var pagina = formatosFiltrados.slice(inicio, fin);
  var html = "";
  for (var i=0; i<pagina.length; i++) {
    var nombre = pagina[i];
    html += "<a href='#' onclick='seleccionarFormato(\""+nombre.replace(/"/g,'&quot;')+"\");return false;'"+(formatoSeleccionado===nombre?" style='font-weight:bold;color:#214c7b;'":"")+">"+nombre+"</a>";
  }
  // Controles de paginaci√≥n
  if (totalPaginas > 1) {
    html += "<div class='pagina'>";
    for (var p=1; p<=totalPaginas; p++) {
      html += "<button onclick='irPaginaFormatos("+p+")'"+(p===paginaFormatos?" class='active'":"")+">"+p+"</button>";
    }
    html += "</div>";
  }
  lista.innerHTML = html;
}


function seleccionarFormato(nombre) {
  formatoSeleccionado = nombre;
  renderFormatosPaginados();
}
function irPaginaFormatos(pag) {
  paginaFormatos = pag;
  renderFormatosPaginados();
}

// Cargar a√±os/casos/subcasos (esto es un ejemplo, debes adaptar a tu l√≥gica)
function cargarDestinoOficios() {
  // Llenar select de a√±o con rango y seleccionar el actual
  var selectAnio = document.getElementById("select-anio-oficio");
  selectAnio.innerHTML = "";
  var anioActual = (new Date()).getFullYear();
  for (var a = anioActual + 1; a >= 2000; a--) {
    var opt = document.createElement("option");
    opt.value = a;
    opt.textContent = a;
    selectAnio.appendChild(opt);
  }
  // Selecciona autom√°tico el a√±o actual
  selectAnio.value = anioActual;

  // Aqu√≠ debes cargar los casos y subcasos basados en el a√±o seleccionado
  // Ejemplo b√°sico:
  cargarCasosOficio(anioActual);
  selectAnio.onchange = function() {
    cargarCasosOficio(this.value);
  }
}

function cargarCasosOficio(anio) {
  var selectCaso = document.getElementById("select-caso-oficio");
  selectCaso.innerHTML = "";
  var rutaCasos = desktop + "\\A√±o " + anio;
  try {
    var carpeta = fso.GetFolder(rutaCasos);
    var casosEnum = new Enumerator(carpeta.SubFolders);
    for (; !casosEnum.atEnd(); casosEnum.moveNext()) {
      var nombreCaso = casosEnum.item().Name;
      var opt = document.createElement("option");
      opt.value = nombreCaso;
      opt.textContent = nombreCaso;
      selectCaso.appendChild(opt);
    }
  } catch(e) {
    // No hay casos para ese a√±o
  }
  // Cargar subcasos para el primer caso
  if (selectCaso.options.length > 0) {
    cargarSubcasosOficio(anio, selectCaso.value);
  } else {
    var selectSubcaso = document.getElementById("select-subcaso-oficio");
    selectSubcaso.innerHTML = "<option value=''> (Sin subcaso) </option>";
  }
  selectCaso.onchange = function() {
    cargarSubcasosOficio(anio, this.value);
  }
}

function cargarSubcasosOficio(anio, caso) {
  var selectSubcaso = document.getElementById("select-subcaso-oficio");
  selectSubcaso.innerHTML = "<option value=''> (Sin subcaso) </option>";
  var rutaSubcasos = desktop + "\\A√±o " + anio + "\\" + caso;
  try {
    var carpeta = fso.GetFolder(rutaSubcasos);
    var subcasosEnum = new Enumerator(carpeta.SubFolders);
    for (; !subcasosEnum.atEnd(); subcasosEnum.moveNext()) {
      var nombreSubcaso = subcasosEnum.item().Name;
      var opt = document.createElement("option");
      opt.value = nombreSubcaso;
      opt.textContent = nombreSubcaso;
      selectSubcaso.appendChild(opt);
    }
  } catch(e) {
    // No hay subcasos
  }
}

function copiarYCrearOficio() {
  // Obtener los valores seleccionados
  var casoSel = document.getElementById('select-caso-oficio-principal').value;
  if (!casoSel) {
    alert("Debe seleccionar un caso.");
    return;
  }
  var partes = casoSel.split("||");
  var anio = partes[0];
  var caso = partes[1];
  var subcaso = document.getElementById('select-subcaso-oficio-principal').value;
  var nuevoNombre = document.getElementById('nuevo-nombre-oficio').value.trim();

  // Validaciones de campos
  if (!nuevoNombre) {
    alert("Debe escribir un nombre para el nuevo oficio.");
    return;
  }
  if (nuevoNombre.match(/[\\\/:*?"<>|]/)) {
    alert("El nombre contiene caracteres no permitidos.");
    return;
  }

  // Validar formato seleccionado
  if (!formatoSeleccionado) {
    alert("Debe seleccionar un formato.");
    return;
  }

  // Determinar la ruta destino
  var rutaBase = desktop + "\\A√±o " + anio + "\\" + caso;
  if (subcaso) {
    rutaBase += "\\" + subcaso;
  }
  if (!fso.FolderExists(rutaBase)) {
    alert("No existe la carpeta destino: " + rutaBase);
    return;
  }

  // Ruta del nuevo archivo
  var extension = formatoSeleccionado.split('.').pop();
  var rutaDestino = rutaBase + "\\" + nuevoNombre + "." + extension;

  // Verificar si ya existe
  if (fso.FileExists(rutaDestino)) {
    var sobreescribir = confirm("Ya existe un archivo con ese nombre en el destino. ¬øDesea sobrescribirlo?");
    if (!sobreescribir) return;
  }

  // Copiar el archivo
  try {
    fso.CopyFile(formatoSeleccionado, rutaDestino, true);
    // Abrir el archivo copiado
    shell.Run('"' + rutaDestino + '"');
    alert("Oficio creado correctamente:\n" + rutaDestino);
  } catch (e) {
    alert("Error al copiar el archivo: " + e.message);
  }
}

// Ejecutar esto cuando se muestra la secci√≥n "Crear oficios"
function mostrarSeccionCrearOficios() {
  cargarFormatosOficio();
  cargarDestinoOficios();
}

// Utilidad
  function abrirRuta(ruta) {
    if (fso.FolderExists(ruta)) {
      shell.Run('"' + ruta + '"', 1, false);
    } else {
      alert("La carpeta no existe.");
    }
  }
  // Inicializaciones
  mostrarCrearPaso('anio');
  mostrarBuscarPaso('anio');
</script>
</body>
</html>
